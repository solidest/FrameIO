//项目:test_powerSupplyManager
project pending_PowerSupplyManager
{
	//受控对象
	system PowerSupplyManager
	{
		//模拟数据
		bool Command1HasFeedback;
		bool Command2HasFeedback;
		
		bool Status1;
		int    Status2;
		
		double SetpointVoltage;
		double SetpointCurrent;
		
		double OutputVoltage;
		double OutputCurrent;
		
		byte LastRecvDatatype;
		byte LastRecvPowerSupplyIdx;
		
		channel CHClient:tcpclient
		{
			serverip="192.168.0.150";
			port=8007;
		}
		
		action Send_OutputPowerSupply:send Send_OutputPowerSupply on CHClient
		{
			@data.g_header_datatype=3;
			g_header_PowerSupplyIdx : LastRecvPowerSupplyIdx;		
			g_OutputVoltage : OutputVoltage;
	        	g_OutputCurrent : OutputCurrent;
		}
		
		action Send_OutCommandFeedBack:send Send_OutCommandFeedBack on CHClient
		{
	
			@data.g_header_datatype=1;
			//g_header_PowerSupplyIdx : LastRecvPowerSupplyIdx;		
			g_Command1HasFeedback : Command1HasFeedback;
	        	g_Command2HasFeedback : Command2HasFeedback;
		}
		
		action Send_OutputStatusData:send Send_Status on CHClient
		{
			@data.g_header_datatype=2;
			//g_header_PowerSupplyIdx : LastRecvPowerSupplyIdx;		
			g_Status1 : Status1;
	        	g_Status2 : Status2;
		}
		
		action Recv_RecvData:recv  Receive_FrameData on CHClient
		{

			g_SetpointVoltage:SetpointVoltage;
			g_SetpointCurrent:SetpointCurrent;
		        
		}
		
	}
	//数据帧
	frame Send_OutCommandFeedBack
	{
		integer g_header_datatype bitcount=8;
		integer g_header_PowerSupplyIdx bitcount=8;
		integer g_Command1HasFeedback bitcount=1;
		integer g_Command2HasFeedback bitcount=1;
		integer g_h1 bitcount=6;
	}

	frame Send_OutputPowerSupply
	{
		integer g_header_datatype bitcount=8;
		integer g_header_PowerSupplyIdx bitcount=8;
		real g_OutputVoltage isdouble=true;
		real g_OutputCurrent isdouble=true;
	}
	frame Send_Status
	{
		integer g_header_datatype bitcount=8;
		integer g_header_PowerSupplyIdx bitcount=8;
		integer g_Status1 bitcount=1;
		integer g_h1 bitcount=7;
		integer g_Status2 bitcount=32 signed=true;
	}
	frame Receive_FrameData
	{
		integer g_header_datatype bitcount=8;
		integer g_header_idx bitcount=8;
		real g_SetpointVoltage isdouble=true;
		real g_SetpointCurrent isdouble=true;
	}

}